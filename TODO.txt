# POC

## TODO

- wrangler alias
- move the wrangler.toml to the templates
- figure out the assets
- dependency graph

DONE:

- copy the template folders

## Install:

- npx create-next-app@latest <app-name> --use-npm
(use npm to avoid symlinks)

- update next.config.mjs as follow

````
/** @type {import('next').NextConfig} */
const nextConfig = {
  output: "standalone",
  experimental: {
    serverMinification: false,
  },
};

export default nextConfig;
```

- add "node-url": "npm:url@^0.11.4" to the package.json

- add a wrangler.toml int the generated app

```
#:schema node_modules/wrangler/config-schema.json
name = "api"
main = ".worker-next/index.mjs"
assets = ".worker-next/assets"
compatibility_date = "2024-08-29"
compatibility_flags = ["nodejs_compat_v2"]
workers_dev = true
minify = false

# The aliases below should not be needed (we don't want users to have to define the aliases themselves)
[alias]
# critters is `require`d from `pages.runtime.prod.js` when running wrangler dev, so we need to stub it out
"critters" = "./.next/standalone/node_modules/cf/templates/shims/empty.ts"
# @opentelemetry/api is `require`d when running wrangler dev, so we need to stub it out
# IMPORTANT: we shim @opentelemetry/api to the throwing shim so that it will throw right away, this is so that we throw inside the
#            try block here: https://github.com/vercel/next.js/blob/9e8266a7/packages/next/src/server/lib/trace/tracer.ts#L27-L31
#            causing the code to require the 'next/dist/compiled/@opentelemetry/api' module instead (which properly works)
"@opentelemetry/api" = "./.next/standalone/node_modules/cf/templates/shims/throw.ts"
```

- Build the builder

```
pnpm --filter builder build:watch
```

- To build for workers:

Build the next app once:

```
node /path/to/poc-next/builder/dist/index.mjs && npx wrangler dev
```

Then you can skip building the next app

```
SKIP_NEXT_APP_BUILD=1 node /path/to/poc-next/builder/dist/index.mjs && npx wrangler dev
```